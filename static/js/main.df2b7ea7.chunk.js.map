{"version":3,"sources":["adapters/index.js","App.js","components/MDInputForm.js","components/MDPreview.js","components/ModeBar.js","components/TableOfContents.js","components/Note.js","routes/index.js","components/NewNoteModal.js","components/NotesDir.js","../markdown sync /^/.//.*/.md$","../markdown/hapi-notes.md","../markdown/hapi-pal.md","../markdown/javascript.md","serviceWorker.js","index.js"],"names":["notesUrl","NotesAdapter","route","fetch","concat","then","r","json","title","options","method","headers","Content-Type","body","JSON","stringify","catch","console","log","note","text","App","_this","Object","_Users_mikecronin_Desktop_copy_node_notes_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_mikecronin_Desktop_copy_node_notes_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mikecronin_Desktop_copy_node_notes_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","toggleEdit","setState","prevState","editing","initState","local","state","window","location","href","match","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_components_NotesDir__WEBPACK_IMPORTED_MODULE_8__","viewInfo","_routes__WEBPACK_IMPORTED_MODULE_9__","React","Component","hot","module","MDInputForm","react_default","onChange","props","handleChange","onSubmit","handleSubmit","htmlFor","id","name","type","value","newNote","MDPreview","classCallCheck","possibleConstructorReturn","getPrototypeOf","markdown","_this$props$note","md","renderWelcome","marked","dangerouslySetInnerHTML","__html","ModeBar","onClick","TableOfContents","sections","map","link","loadContents","prevProps","section","Note","e","defineProperty","target","preventDefault","update","objectSpread","oldTitle","params","fileName","redirectNewFile","redirectMissingFile","_this2","path","require","response","loadFile","err","snapshot","Redirect","to","components_MDInputForm","components_MDPreview","components_TableOfContents","components_ModeBar","Routes","Switch","Route","exact","render","components_Note","assign","NewNoteModal","sleep","time","Promise","resolve","setTimeout","create","res","msg","alert","componentDidUpdate","toggleNewFileModal","NotesDir","isNewFileModalVisibile","files","reload","isEditMode","components_NewNoteModal","file","idx","Link","key","./hapi-notes.md","./hapi-pal.md","./javascript.md","webpackContext","req","webpackContextResolve","__webpack_require__","Error","code","keys","exports","p","Boolean","hostname","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df2b7ea7.chunk.js","sourcesContent":["const notesUrl = \"http://localhost:8100\"\n\nclass NotesAdapter {\n  static getOne(route) {\n    return fetch(`${notesUrl}/notes/${route}`).then(r=>r.json())\n  }\n\n  static create(title) {\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(title)\n    }\n    return fetch(`${notesUrl}/notes`, options)\n      .then(r => r.json())\n      .catch(console.log)\n  }\n\n  static update(note) {\n    let options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    console.log('Note in update:', note)\n    return fetch(`${notesUrl}/notes/${note.title}`, options)\n      .then(r => r.json())\n  }\n\n\n  static reload(route) {\n    let options = {\n      method: 'PUT',\n    }\n    return fetch(`${notesUrl}/reload`, options)\n      .then(r=>r.text())\n  }\n}\n\nexport default NotesAdapter","import React from 'react';\nimport { hot } from 'react-hot-loader'\nimport './App.css';\nimport NotesDir from './components/NotesDir'\nimport Routes from './routes'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.initState = {\n      editing: false,\n      local: false \n    }\n    this.state = this.initState\n  }\n\n  toggleEdit = () => {\n    this.setState((prevState) => ({\n      editing: !prevState.editing\n    }));\n  }\n\n  componentDidMount() {\n    if (window.location.href.match(\"//localhost:\")) {\n      console.log('hello', window.location.href)\n      this.setState({\n        local: true,\n        editing: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <NotesDir \n          viewInfo={this.state}\n        />\n        <Routes \n          viewInfo = {this.state} \n          toggleEdit = {this.toggleEdit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(App)\n","import React from 'react'\n\nclass MDInputForm extends React.Component {\n  render() {\n    return (\n      <form \n        onChange={this.props.handleChange} \n        onSubmit={this.props.handleSubmit}\n      >\n        <label htmlFor=\"title\">title</label>\n        <input \n          id=\"title\" \n          name=\"title\" \n          type=\"text\"\n          value={this.props.newNote.title}\n        /> \n        <label htmlFor=\"text\">text</label>\n        <textarea \n          id=\"text\" \n          name=\"text\"\n          value={this.props.newNote.text}\n        />\n        <button>Save</button>\n      </form>\n    )\n  }\n}\n\nexport default MDInputForm","import React from 'react'\nimport marked from 'marked'\n\nclass MDPreview extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      markdown: \"\"\n    }\n  }\n\n  renderWelcome() {\n    return \"# hello there \\n ## start adding markdown to get started\"\n  }\n\n  render() {\n    const { title, text } = this.props.note;\n    const md = text || this.renderWelcome();\n    const markdown = marked(md)\n    return (\n      <div id=\"md-preview\">\n        <h1>Preview of: {title}</h1>\n        <div dangerouslySetInnerHTML={{__html: markdown}}></div>\n      </div>\n    )\n  }\n}\n\nexport default MDPreview","import React from 'react'\n\nclass ModeBar extends React.Component {\n  render() {\n    return (\n      <div id=\"mode-bar\">\n        <p>Currently in {this.props.viewInfo.editing ? \"Editing\" : \"Viewing\"} mode</p>\n        <button onClick={this.props.toggleEdit}>Toggle</button>\n      </div>\n    )\n  }\n}\n\nexport default ModeBar","import React from \"react\"\nimport marked from \"marked\"\n\nclass TableOfContents extends React.Component {\n  constructor() {\n    super() \n    this.initState = {\n      sections: []\n    }\n    this.state = this.initState\n  }\n\n  loadContents() {\n    if (this.props.text) {\n      let sections = marked(this.props.text).match(/<h1.+>.+</g).map(text => {\n        let match = text.match(/<h1 id=\"(.+)\">(.+)</)\n        return {\n          link: match[1],\n          text: match[2]\n        }\n      })\n      this.setState({ sections })\n    }\n  }\n\n  componentDidMount() {\n    this.loadContents()\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.text !== this.props.text) {\n      this.loadContents()\n    }\n  }\n  render() {\n    return (\n      <div id=\"table-of-contents\"> \n        <p>Table of contents</p>\n        {\n          this.state.sections.map(section => <a href={`#${section.link}`}>{section.text}</a>)\n        }\n      </div>\n\n    )\n  }\n}\n\nexport default TableOfContents","import React from 'react';\nimport MDInputForm from './MDInputForm'\nimport MDPreview from './MDPreview'\nimport ModeBar from './ModeBar'\nimport TableOfContents from './TableOfContents'\nimport NotesAdapter from '../adapters'\nimport { Redirect } from 'react-router'\n\nclass Note extends React.Component {\n\n  constructor() {\n    super()\n    this.initState = {\n      title: \"\",\n      text: \"\",\n      redirectNewFile: false,\n      redirectMissingFile: false,\n    }\n    this.state = this.initState;\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    console.log('update it', )\n    NotesAdapter.update({...this.state, oldTitle: this.props.match.params.fileName})\n      .then(() => {\n        if (!this.props.match.params.fileName) this.setState({ redirectNewFile: true })\n      })\n  }\n\n  loadFile(title) {\n    let path = require('../../markdown/' + title + \".md\")\n    fetch(path)\n      .then(response => {\n        return response.text()\n      })\n      .then(text => {   \n        this.setState((prevState) => ({\n          title,\n          text,\n        }));\n      })\n  }\n\n  // handles initial load of the page \n  componentDidMount() {\n    console.log('mount')\n    try {\n      if (this.props.match.params.fileName) { \n        this.loadFile(this.props.match.params.fileName) \n      }\n    } catch (err) {\n      console.log('couldnt find the file')\n      this.setState({ redirectMissingFile: true })\n    }\n  }\n\n  // handles every time we switch notes\n  componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this.props.match.params.fileName !== prevProps.match.params.fileName) {\n        if (this.props.match.params.fileName) {\n          this.loadFile(this.props.match.params.fileName)\n        } else {\n          this.setState(this.initState)\n        }\n      }\n      if (this.state.redirectMissingFile) {\n        this.setState(this.initState)\n      }\n  }\n\n  render() {\n    if (this.state.redirectNewFile) {\n      // whole page hard reloads on file creation, so we need to immediately redirect to the new file\n      console.log('redirected new file')\n      return <Redirect to={`/notes/${this.state.title}`}/>;\n    }\n    if (this.state.redirectMissingFile) {\n      console.log('redirected missing file')\n      // whole page hard reloads on file creation, so we need to immediately redirect to the new file\n      return <Redirect to=\"/\"/>;\n    }\n    return (\n      <div className=\"note\">\n        {\n          this.props.viewInfo.editing ? \n            <MDInputForm \n            handleChange = {this.handleChange}\n            handleSubmit = {this.handleSubmit}\n            newNote = {this.state}\n            viewInfo={this.props.viewInfo}\n            toggleEdit={this.props.toggleEdit}\n          /> : \"\"\n          \n        }\n        <MDPreview \n          note = {this.state}\n          viewInfo={this.props.viewInfo}\n        />\n        {\n          !this.props.viewInfo.editing ? \n          <TableOfContents text={this.state.text} /> : \"\"\n        }\n        {\n          this.props.viewInfo.local ?\n          <ModeBar \n            viewInfo={this.props.viewInfo}\n            toggleEdit={this.props.toggleEdit}\n          /> : \"\"\n        }\n      </div>\n    );\n  }\n}\n\nexport default Note","import React from \"react\"\nimport {Switch, Route} from \"react-router-dom\"\nimport Note from '../components/Note'\n\nconst Routes = (props) => {\n  const {viewInfo, toggleEdit} = props\n  return (\n    <Switch>\n      <Route \n        exact path=\"/\" \n        render={(props) => <Note {...props} viewInfo={viewInfo} toggleEdit={toggleEdit}/>}\n      />\n      <Route \n        exact path=\"/notes/:fileName\" \n        render={(props) => <Note {...props} viewInfo={viewInfo} toggleEdit={toggleEdit}/>}\n      />\n      <Route \n        exact path=\"*\" \n        render={(props) => <Note {...props} viewInfo={viewInfo} toggleEdit={toggleEdit}/>}\n      />\n    </Switch>\n  )\n}\n\nexport default Routes","import React from 'react'\nimport NotesAdapter from '../adapters'\nimport { Redirect } from 'react-router'\n\nclass NewNoteModal extends React.Component {\n  constructor() {\n    super() \n    this.initState = {\n      title: \"\",\n      redirectNewFile: false,\n    }\n    this.state = this.initState\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  sleep = (time) => {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault();\n    NotesAdapter.create(this.state)\n      .then((res) => {\n        if (res.msg) {\n          alert(res.msg)\n        } else {\n          this.sleep(100).then(() => { // I give up trying to solve the race condition for now.\n            this.setState({redirectNewFile: true})\n          })\n        }\n      })\n  }\n\n  componentDidUpdate =() => {\n    if (this.state.redirectNewFile) {\n      this.setState({\n        redirectNewFile: false\n      })\n    }\n  }\n\n  render() {\n    if (this.state.redirectNewFile) {\n      // whole page hard reloads on file creation, so we need to immediately redirect to the new file\n      return <Redirect to={`/notes/${this.state.title}`}/>;\n    }\n    return (\n      <div id=\"new-file-modal\">\n        <h1>I am the new file modal</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>File Name</label>\n          <input type=\"text\" name=\"title\" onChange={this.handleChange} />\n          <p>Warning: creating a new file will destroy any unsaved changes. Be sure to save your current file</p>\n          <button onClick={this.props.toggleNewFileModal}>Cancel</button>\n          <button>Create</button>\n        </form>\n      </div> \n    )\n  }\n}\n\nexport default NewNoteModal","import React from 'react'\nimport NotesAdapter from '../adapters'\nimport NewNoteModal from './NewNoteModal'\nimport { Link } from \"react-router-dom\";\n\nclass NotesDir extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      files: [],\n      isNewFileModalVisibile: false,\n    }\n  }\n\n  componentWillMount() {\n    const files = require('../files.json')\n    this.setState({files})\n  }\n\n  reload() {\n    NotesAdapter.reload()\n  }\n\n  isEditMode() {\n    return this.props.viewInfo.editing && this.props.viewInfo.local \n  }\n\n  toggleNewFileModal = () => {\n    console.log('hello')\n    this.setState((prevState) => ({\n      isNewFileModalVisibile: !prevState.isNewFileModalVisibile\n    }));\n  }\n\n  render() {\n    return (\n      <div id=\"notes-dir\">\n        <h1>Files</h1>\n        { this.isEditMode() ? <button onClick={this.toggleNewFileModal}>New File</button> : \"\" }\n        { this.state.isNewFileModalVisibile ? <NewNoteModal toggleNewFileModal={this.toggleNewFileModal} /> : \"\" }\n        { this.state.files.map((file, idx) =>  <Link to={`/notes/${file}`} key={idx}>{file}</Link>) }\n        { this.isEditMode() ? <button onClick={this.reload}>Reload</button> : \"\" }\n      </div>\n    )\n  }\n}\n\nexport default NotesDir","var map = {\n\t\"./hapi-notes.md\": 42,\n\t\"./hapi-pal.md\": 43,\n\t\"./javascript.md\": 44\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 41;","module.exports = __webpack_public_path__ + \"static/media/hapi-notes.4b0294dc.md\";","module.exports = __webpack_public_path__ + \"static/media/hapi-pal.9549f239.md\";","module.exports = __webpack_public_path__ + \"static/media/javascript.444bcb3a.md\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(  \n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}